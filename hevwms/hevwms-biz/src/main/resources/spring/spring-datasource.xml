<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xsi:schemaLocation="
     http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
     http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
     http://www.springframework.org/schema/jee 
     http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context-3.1.xsd
     http://www.springframework.org/schema/lang
     http://www.springframework.org/schema/lang/spring-lang-3.1.xsd">
	<!-- <bean id="dataSourceTarget" class="org.springframework.jndi.JndiObjectFactoryBean"> 
		<property name="jndiName"> <value>${datasource.jndi.name}</value> </property> 
		<property name="resourceRef" value="true"/> <property name="jndiTemplate"> 
		<bean class="org.springframework.jndi.JndiTemplate"> <property name="environment"> 
		<props> <prop key="java.naming.provider.url">${datasource.jndi.url}</prop> 
		<prop key="java.naming.factory.initial">weblogic.jndi.WLInitialContextFactory</prop> 
		</props> </property> </bean> </property> </bean> <bean id="dataSource" class="com.haier.openplatform.jdbc.HOPCombinationDataSource"> 
		<property name="dataSources"> <list> <ref bean="dataSourceTarget"/> </list> 
		</property> <property name="configuration" ref="configuration"/> </bean> 
		<bean id="configuration" class="com.haier.openplatform.jdbc.HOPJdbcConfiguration"> 
		<property name="jdbcProfiler" ref="jdbcProfiler"></property> </bean> <bean 
		id="jdbcProfiler" class="com.haier.openplatform.console.audit.JdbcAuditProfiler"> 
		</bean> -->
	<!-- <bean id="druidStatLoggerProxy" class="com.haier.openplatform.console.audit.DruidStatLoggerProxy">
		<property name="sendMessageClient" ref="sendMessageClient" />
		<property name="enabled" value="${druid.monitor.enable}" />
	</bean> -->

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${datasource.url}" />
		<property name="username" value="${datasource.name}" />
		<property name="password" value="${datasource.password}" />
		<property name="connectionProperties" value="config.decrypt=false" />
		<property name="filters" value="config,log4j" />
		<property name="maxActive" value="${datasource.maxActive}" />
		<property name="initialSize" value="${datasource.initialiSize}" />
		<property name="maxWait" value="60000" />
		<property name="minIdle" value="8" />
		<property name="timeBetweenEvictionRunsMillis" value="10000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x' from dual " />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		<property name="timeBetweenLogStatsMillis" value="${time.between.logstats.millis}" />
		<!-- <property name="statLogger" ref="druidStatLoggerProxy" /> -->
	</bean>
</beans>