label_a:BEGIN
/*------------------------------------------------------------------------------
  || 功能描述： 将单据明细汇总后生成单据信息
  || 备注描述：
  || 参数描述： 无             名称 ：prc_barcode_igp     输入输出类型：VARCHAR
  || 作    者： Song Yinglong  时间 : 2015-10-29
  ||------------------------------------------------------------------------------
  || 修改记录：
  ||------------------------------------------------------------------------------
  || 执行结果：as_return=0成功 as_return=1失败
  || 执行备注：
  -------------------------------------------------------------------------------*/
  declare v_serial_no    VARCHAR(32); -- 流水号
  declare v_order_code   VARCHAR(50); -- 单据号
  declare v_order_item   VARCHAR(20); -- 单据行项目
  declare v_inbound      INTEGER; -- INBOUND类型全部收货判断
  declare v_dn           INTEGER; -- DN类型全部收发货判断
  declare v_car_id       INTEGER; -- 入门证ID
  declare v_posting_date VARCHAR(32); -- 格式化后的过账日期xuyg add
  declare v_plan_no      VARCHAR(32); -- 计划号
  declare v_division     VARCHAR(100);
  declare v_p_row_id     INTEGER;
  declare v_num          INTEGER;
  declare v_code         VARCHAR(30);
  declare v_row_id       VARCHAR(30);
  declare v_order_id     VARCHAR(30);
  -- 循环游标用
  declare v_sap_order_no  VARCHAR(64);
  declare v_sap_order_item  VARCHAR(64);
  declare v_material_no     VARCHAR(64);
  declare v_plant           VARCHAR(32);
  declare v_location        VARCHAR(32);
  declare v_unit            VARCHAR(32);
  declare v_qty             INTEGER;
  declare v_doc_tpye        VARCHAR(32);
  declare v_customer_model  VARCHAR(64);
  declare v_material_desp   VARCHAR(64);
  -- for sql exception
  DECLARE v_sqlstate				VARCHAR(32);
  DECLARE v_sqlmsg					VARCHAR(2000);
	DECLARE v_igp_num					INTEGER DEFAULT 0;
	DECLARE v_sap_flag				VARCHAR(32);
	DECLARE v_sap_flag_min		VARCHAR(32);
	DECLARE v_in_out_flag			VARCHAR(32);
	DECLARE v_scan_all_qty				INTEGER;
	DECLARE v_igp_qty					INTEGER;
	
	
  DECLARE done INTEGER default 0;
  DECLARE cur CURSOR FOR SELECT t.sap_order_no,
           t.sap_order_item,
           t.material_no,
           t.plant,
           t.location,
           t.unit,
           SUM(t.qty) qty,
           MAX(t.doc_type) doc_tpye,
           MAX(t.customer_model) customer_model,
           MAX(t.material_desp) material_desp
      FROM ods_order_info_dtl t
     WHERE t.serial_no = v_serial_no
     GROUP BY t.sap_order_no,
              t.sap_order_item,
              t.material_no,
              t.plant,
              t.location,
              t.unit;   
   
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;
   
   DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
      ROLLBACK;
      SET as_return='1';
	  GET DIAGNOSTICS CONDITION 1 v_sqlstate = RETURNED_SQLSTATE, v_sqlmsg = MESSAGE_TEXT;
      SET as_msg=SUBSTRING('IGP_100: Operation failed, please contact with administrator.', 1, 4000);
	  CALL p_log(SUBSTRING(concat('IGP_100: SYSTEM EXCEPTION: ',v_sqlmsg), 1, 4000),
									'', 'system', '', 'prc_barcode_igp', 3, v_sqlstate);
    END;
     set autocommit = 0 ;
    -- 返回信息0为成功
    set as_return = '0';
    set as_msg    = 'success';

    -- 验证输入的过账日期必须在本月之内。 --
    set v_posting_date = SUBSTRING(as_posting_date, 1, 10);
    IF str_to_date(v_posting_date, '%Y-%m-%d') <
       STR_TO_DATE(CONCAT(date_format(sysdate(),'%Y-%m'),'-01'),'%Y-%m-%d') THEN
       set as_return = '1';
       set as_msg    = CONCAT('IGP_001: The posting date must be within this month: ', v_posting_date,'. Operator: ', as_operator);
      ROLLBACK;
      LEAVE label_a;
    END IF;
    IF STR_TO_DATE(v_posting_date, '%Y-%m-%d') >=
      STR_TO_DATE(CONCAT(date_format(DATE_ADD(sysdate(),INTERVAL 1 MONTH), '%Y-%m'),'-01'),
             '%Y-%m-%d')  THEN
      set as_return = '1';
      set as_msg    = CONCAT('IGP_002: The posting date must be within this month: ',
                   v_posting_date,'. Operator: ', as_operator);
      ROLLBACK;
      LEAVE label_a;
    END IF;
  -- 当单据是DN时，判断SAP单据是否完全完成和需求完成差异相同
    IF as_type = 'DN' THEN
      set v_dn = f_get_dn_finish(as_order_no);
      IF v_dn > 0 THEN
        set as_return = '1';
        set as_msg    = CONCAT('IGP_003: Please confirm the Qty required is equal to scanned quantity before doing IGP. Order: ',
                     as_order_no, '.');
        ROLLBACK;
        LEAVE label_a;
      END IF;
   -- 当单据是sto时，判断SAP单据是否完全完成和需求完成差异相同---------------------
    ELSEIF as_type = 'STO' THEN
      set v_dn = f_get_stodn_in_finish(as_order_no);
      IF v_dn > 0 THEN
        set as_return = '1';
        set as_msg    = CONCAT('IGP_004: Please confirm the Qty required is equal to scanned quantity before doing IGP. Order: ',
                     as_order_no, '.');
        ROLLBACK;
        LEAVE label_a;
      END IF; 
    ELSEIF as_type = 'INBOUND' THEN
			
      set v_dn = f_get_inbound_finish(as_order_no);
			IF as_order_no = '0740198320' THEN
				set v_dn = 0;
			END IF;
			IF as_order_no = '0740174016' THEN
				set v_dn = 0;
			END IF;
      IF v_dn > 0 THEN
        set as_return = '1';
        set as_msg    = CONCAT('IGP_005: Please confirm the Qty required is equal to scanned quantity before doing IGP. Order: ',
                     as_order_no, '.');
        ROLLBACK;
        LEAVE label_a;
      END IF;
    END IF;

  -- 流水号--
   set v_serial_no = getid('seq_serial_no');
  -- 更新入库的流水号--
  IF as_type = 'INBOUND' OR as_type = 'DN' OR as_type = 'STO' THEN
    UPDATE ods_order_info_dtl t
       SET t.serial_no = v_serial_no
     WHERE t.sap_order_no = as_order_no
       AND t.finish_flag = '0' -- 未汇总完成
       AND t.used_flag = '1' -- 启用标志
       AND t.order_type = '1'; -- 入库标志
  ELSE
    UPDATE ods_order_info_dtl t
       SET t.serial_no = v_serial_no
     WHERE t.sap_order_no = as_order_no
       AND t.scanned_by = as_operator
       AND t.finish_flag = '0' -- 未汇总完成
       AND t.used_flag = '1' -- 启用标志
       AND t.order_type = '1'; -- 入库标志
  END IF;
	
  -- 根据STO查询car_id,其他类型查询入门登记表
  IF as_type = 'STO' THEN 
   BEGIN
      SELECT count(t.row_id) into v_num FROM ods_indoor_info t
       WHERE t.car_no = as_car_no limit 0,1;
         IF v_num != 1 THEN 
					set v_car_id=null;
/*
          set as_return = '1';
          set as_msg    = CONCAT('BARCODE_IGP_006 ERROR:ODS_INDOOR_INFO is not records,as_car_no=',
                       as_car_no,'order_no=',as_order_no,',as_type=', as_type);
          ROLLBACK;
          LEAVE label_a;*/
         END IF;
        SELECT t.row_id
          INTO v_car_id
          FROM ods_indoor_info t
         WHERE t.car_no = as_car_no
           limit 0,1;
    END;
  END IF;

  -- 获取计划号-------------------------------------
  IF as_type = 'PO' THEN
    BEGIN
      set v_num = 0;
      select count(t.plan_no) into v_num 
        from ods_indoor_info t
       WHERE t.car_no = as_car_no
         AND t.in_date > date_sub(now(),interval 30 DAY)
            -- AND t.in_date < trunc(SYSDATE() + 1)
         AND t.flag = '0'
         AND t.out_date IS NULL
         limit 0,1;
 /*        
      IF  v_num = 0 THEN 
        set as_return = '1';
        set as_msg    = CONCAT('BARCODE_IGP_007 ERROR:ODS_INDOOR_INFO is not records,as_car_no=',as_car_no,'order_no=',as_order_no,',as_type=',as_type);
        ROLLBACK;
        LEAVE label_a ;
      END IF;
    */

      set v_plan_no = '';
      SELECT t.plan_no
        INTO v_plan_no
        FROM ods_indoor_info t
       WHERE t.car_no = as_car_no
         AND t.in_date > date_sub(now(),interval 30 DAY)
            -- AND t.in_date < trunc(SYSDATE + 1)
         AND t.flag = '0'
         AND t.out_date IS NULL
         LIMIT 0,1;
			
    END;
  END IF;
  -- 单据号,行项目
  set v_code = CONCAT('00000000',getid('seq_order_no'));
  set v_code = SUBSTRING(v_code,length(v_code)-8,length(v_code));
  set v_order_code = CONCAT('I',v_code);
  set v_order_item = '1';
  set done= 0;  -- 前面sto查不出车id和po查不出计划号会把done改成1
  OPEN cur;
  info_loop:REPEAT
    FETCH cur into v_sap_order_no ,v_sap_order_item,v_material_no,v_plant,v_location,v_unit,v_qty,v_doc_tpye,v_customer_model,v_material_desp;
  
		IF done = 1 THEN 
			LEAVE info_loop;
    END IF;
    -- 生成row_id 以及汇总过账ID
    set v_row_id = getid('seq_ods_order_info');
    --  生成汇总单据
    INSERT INTO ods_order_info
      (order_no,
       order_item,
       order_type,
       doc_tpye,
       sap_order_no,
       sap_order_item,
       batch_no,
       plant,
       location,
       material_no,
       customer_model,
       material_desp,
       scanned_qty,
       require_qty,
       order_close,
       unit,
       car_no,
       vechile_type,
       create_by,
       posting_date,
       sap_send_id,
       car_id,
				LR_NO,
        LR_DATE,
				INVOICE_NO,
				TRANSPORTER_CODE)
    VALUES
      (v_order_code,
       v_order_item,
       '1',
       v_doc_tpye,
       v_sap_order_no,
       v_sap_order_item,
       NULL, -- order_dtl.batch_no
       v_plant,
       v_location,
       v_material_no,
       v_customer_model,
       v_material_desp,
       v_qty,
       v_qty, -- 扫描等于需求数量
       '1', -- 关闭
       v_unit,
       as_car_no,
       as_vehicle,
       as_operator,
       as_posting_date,
       v_row_id,
       v_car_id,
				as_lr_no,
        as_lr_date,
				as_invoice_no,
				as_transporter);  -- car_id 先放空 2016-01-22
			
       select t.row_id into v_order_id from ods_order_info t where t.sap_send_id = v_row_id;

    -- 修改单据明细完成汇总标志
    UPDATE ods_order_info_dtl t
       SET t.finish_flag = '1', -- 汇总结束
           order_id      = v_order_id,
           order_no      = v_order_code,
           order_item    = v_order_item
     WHERE t.sap_order_no = v_sap_order_no
       AND t.sap_order_item = v_sap_order_item
          -- AND t.material_no = v_material_no
          -- AND t.plant = v_plant
       AND t.location = v_location
          -- AND t.unit = v_unit
       AND t.finish_flag = '0' -- 未汇总完成
       AND t.order_type = '1' -- 入库标志
       AND t.serial_no = v_serial_no;
       
       -- 累加行项目
    set v_order_item = v_order_item + 1;
    
    -- 增加发货计划的实际执行数量    
   /* IF as_type = 'PO' AND substring(v_location, 1, 3) = 'LHR' THEN
      -- OR as_type = 'DN' THEN
      BEGIN
        IF v_plan_no IS NOT NULL THEN
          UPDATE ods_plan_info
             SET actual_aty = if(actual_aty is null, 0,actual_aty) + if(v_qty is null, 0,v_qty),
                 modify_by  = 'prc_barcode_igp'
           WHERE plan_no = v_plan_no
             AND material_no = v_material_no;
          IF ROW_COUNT() <= 0 THEN
            -- p_log_no_commit(as_logmsg => 'no plan,must add plan item', ai_alert_level => 3, as_module => 'prc_barcode_ogp',
            -- as_category => 'prc_barcode_ogp');
            set @v_p_row_id := seq_ods_plan_info_id.nextval;
            set @v_division := '';
            SELECT t. division
              INTO v_division
              FROM md_mat_info t
             WHERE t.material_no = order_dtl.material_no
               AND rownum = 1;
          
            INSERT INTO ods_plan_info
              (row_id,
               plan_no,
               item_no,
               -- TYPE,
               plan_date,
               product_name,
               product_code,
               product_model,
               customer_model,
               material_no,
               material_desp,
               deliver_city_name,
               gi_location,
               receipt_city_name,
               gr_location,
               plan_qty,
               factory_qty,
               actual_aty,
               unit,
               order_status,
               factory_confirm,
               logistics_confirm,
               plan_vehicle_qty,
               actual_vehicle_qty,
               create_by,
               create_date,
               modify_by,
               modify_date,
               flag,
               version,
               factory_remark,
               logistics_remark,
               remark,
               deliver_city_code,
               receipt_city_code,
               gr_location_code,
               gi_location_code,
               logistics_qty,
               append_flag,
               append_by,
               append_date
               
               )
              SELECT v_p_row_id,
                     v_plan_no,
                     substring(v_p_row_id,
                            length(v_p_row_id) - 5,
                            length(v_p_row_id)),
                     plan_date,
                     v_division,
                     v_division, -- order_dtl.customer_model,
                     t_customer_model,
                     t_customer_model, -- order_dtl.material_desp,
                     t_material_no,
                     t_material_desp,
                     deliver_city_name,
                     gi_location,
                     receipt_city_name,
                     gr_location,
                     0,
                     0,
                     t_qty,
                     t_unit,
                     order_status,
                     '', -- factory_confirm, 
                     '', -- logistics_confirm, 
                     plan_vehicle_qty,
                     actual_vehicle_qty,
                     'SYSTEM_PO',
                     SYSDATE(),
                     '', -- modify_by
                     SYSDATE(),
                     '0', -- flag,
                     version,
                     '', -- factory_remark, 
                     '', -- logistics_remark, 
                     '', -- remark, 
                     deliver_city_code,
                     receipt_city_code,
                     gr_location_code,
                     gi_location_code,
                     0, -- logistics_qty,
                     '1', -- append_flag, 
                     'SYSTEM_PO', -- append_by, 
                     SYSDATE() -- append_date                                                                 
                FROM ods_plan_info
               WHERE plan_no = v_plan_no
                 limit 0,1;
          END IF;
        END IF;
      END;
    END IF; */
  UNTIL done = 1
  END REPEAT info_loop;
  CLOSE cur;
  -- 如果没有执行明细汇总--
  IF v_order_item = '1' THEN
    set as_return = '1';
		IF as_type='INBOUND' THEN
				select sum(t.SCANNED_QTY) INTO v_igp_qty from ods_order_info t where t.SAP_ORDER_NO=as_order_no;
				SELECT sum(FINISH_QTY) INTO v_scan_all_qty FROM stg_inbound_down t WHERE t.INBOUND_DELIVERY_NO=as_order_no;
		ELSEIF as_type='STO' THEN
				SELECT sum(t.SCANNED_QTY) INTO v_igp_qty from ods_order_info t where t.SAP_ORDER_NO=as_order_no AND t.ORDER_TYPE='1';
				SELECT sum(gr_FINISH_QTY) INTO v_scan_all_qty FROM stg_stodn_down t WHERE t.stodn_no=as_order_no;

		END IF;
		IF IFNULL(v_igp_qty,0) != IFNULL(v_scan_all_qty,0) THEN
				set as_msg    = CONCAT('IGP_009: Igp qty is different from scan qty,pls check. ', as_type, ' order: ',
                 as_order_no, ', Operator: ', as_operator);
				ROLLBACK;
				leave label_a;
		END IF;
	-- 查询汇总表，检查是否已经完成汇总，是否过账成功
		SELECT count(1),max(t.SAP_FLAG) ,min(t.sap_flag) ,min(t.in_out_flag)
					INTO v_igp_num,v_sap_flag,v_sap_flag_min	,v_in_out_flag
					from ods_order_info t 
									WHERE t.SAP_ORDER_NO=as_order_no AND t.order_type='1'
					ORDER BY t.create_date DESC
								limit 1;
	-- 没有数据说明，没有完成汇总
		IF IFNULL(v_igp_num,0)=0 THEN 
				set as_msg    = CONCAT('IGP_008: no data need to igp,please check scan details. ', as_type, ' order: ',
                 as_order_no, ', Operator: ', as_operator);
		ELSE
				IF as_type='GIFT' THEN 
							set as_msg    = CONCAT('IGP_008: no data need to igp,please check barcodes at Portal Inventory-> Stock Age Report. ',
											as_type, ' order: ',as_order_no, ', Operator: ', as_operator);
							ROLLBACK;
							leave label_a;
				END IF;
			-- 走到这里说明已完成汇总
				IF IFNULL(v_sap_flag,'0') != IFNULL(v_sap_flag_min,'0') THEN
						SET v_sap_flag='2';
				END IF;
				-- 所有行项目sap_flag都是1，才说明过账成功
				IF IFNULL(v_sap_flag,'0') ='1' THEN
						IF IFNULL(v_in_out_flag,'0') ='1' THEN
							set as_msg    = CONCAT(' Order Igp has Success.no need Igp again. ', as_type, ' order: ',
                 as_order_no, ', Operator: ', as_operator);
						ELSE
							SET as_msg = CONCAT(' Receipt goods error ,please contact administrator. ', as_type, ' order: ',
                 as_order_no, ', Operator: ', as_operator);
						END IF;
				ELSE
							set as_msg    = CONCAT('IGP_09: order igp success. but post to sap failed,please post again at Portal OGP&OGP info.', as_type, ' order: ',
                 as_order_no, ', Operator: ', as_operator);
				END IF;
		END IF;
    ROLLBACK;
    leave label_a;
  END IF;
	-- inbound 汇总后更新 po状态
	IF as_type = 'INBOUND' THEN
		CALL prc_inbound_to_po(as_order_no);
	END IF;
  -- STO更新收货时间
  IF as_type = 'STO' THEN
		update stg_stodn_down n  set n.gr_date=date_format(sysdate(), '%Y-%m-%d') where n.STODN_NO=as_order_no;
    update stg_sto_down t
       set t.gr_date = date_format(sysdate(), '%Y-%m-%d')
     where t.sto_no = (select m.sto_no from stg_stodn_down m where m.STO_NO=as_order_no limit 0,1)
						and t.sto_item_no=SUBSTRING((select s.sto_item_no from stg_stodn_down s 
				where s.sto_no=as_order_no limit 0,1),1,5);
  END IF;
  
  -- 返回单号
  set as_r_order_no = v_order_code; 
  COMMIT;
END